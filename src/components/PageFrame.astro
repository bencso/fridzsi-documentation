---
import config from "virtual:starlight/user-config";
import MobileMenuToggle from "@astrojs/starlight/components/MobileMenuToggle.astro";
import Search from "@astrojs/starlight/components/Search.astro";

const { siteTitle, siteTitleHref } = Astro.locals.starlightRoute;

const shouldRenderSearch =
  config.pagefind ||
  config.components.Search !== "@astrojs/starlight/components/Search.astro";

const { hasSidebar } = Astro.locals.starlightRoute;
---

<div class="page sl-flex">
  {
    hasSidebar && (
      <nav
        class="sidebar print:hidden"
        aria-label={Astro.locals.t("sidebarNav.accessibleLabel")}
      >
        <MobileMenuToggle />
        <div id="starlight__sidebar" class="sidebar-pane">
          <div class="sidebar-content sl-flex">
            <a href={siteTitleHref} class="w-full text-2xl font-bold text-white">
              {siteTitle}
            </a>
            {shouldRenderSearch && <Search />}
            <slot name="sidebar" />
          </div>
        </div>
      </nav>
    )
  }
  <div class="main-frame"><slot /></div>
</div>

<style>
  @layer starlight.core {
    .page {
      flex-direction: column;
      min-height: 100vh;
    }

    :global([data-has-sidebar]) .header {
      padding-inline-end: calc(
        var(--sl-nav-gap) + var(--sl-nav-pad-x) + var(--sl-menu-button-size)
      );
    }

    .sidebar-pane {
      visibility: var(--sl-sidebar-visibility, hidden);
      position: fixed;
      z-index: var(--sl-z-index-menu);
      inset-block: var(--sl-nav-height) 0;
      inset-inline-start: 0;
      width: 100%;
      height: 100%;
      top: 0px;
      background-color: var(--sl-color-black);
    }

    :global([aria-expanded="true"]) ~ .sidebar-pane {
      --sl-sidebar-visibility: visible;
    }

    .sidebar-content {
      height: 100dvh;
      min-height: max-content;
      padding: 1rem var(--sl-sidebar-pad-x) 0;
      flex-direction: column;
      gap: 1rem;
    }

    @media (min-width: 50rem) {
      .sidebar-content::after {
        content: "";
        padding-bottom: 1px;
      }
    }

    .main-frame {
      padding-inline-start: var(--sl-content-inline-start);
    }

    @media (min-width: 50rem) {
      :global([data-has-sidebar]) .header {
        padding-inline-end: var(--sl-nav-pad-x);
      }
      .sidebar-pane {
        --sl-sidebar-visibility: visible;
        width: var(--sl-sidebar-width);
        background-color: var(--sl-color-bg-sidebar);
        border-inline-end: 1px solid var(--sl-color-hairline-shade);
      }
    }
  }
</style>
